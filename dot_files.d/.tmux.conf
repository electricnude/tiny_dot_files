# /* vim: set filetype=tmux: */

#
## tmux configuration


### Basic configuration {{{


#
## terminfo

#// if 'TERMINFO' not exists, could not enable ctrl operation(CTRL-A, etc...) like as old linux box...
# set-option -g default-terminal "screen-bce"
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "xterm-256color"
# set-option -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "xterm-256color"
# set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256color-italic:Tc"
# set terminal-overrides -ga ",xterm-256color:Tc"

# __ set -g default-terminal "xterm-256color-italic"
# __ set -ga terminal-overrides ",xterm-256color-italic:Tc"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"


#
## password
# set-password -c 'SET_PASSWORD_HERE'


#
## prefix
set-option -g prefix 'C-\'
unbind-key C-b
bind 'C-\' send-prefix


# history( default 2000 )
set-option -g history-limit 1000000


# ESC後の待ち時間(ミリ秒)
set-option -s escape-time 0

# 文字コード
# xxx set-window-option -g utf8 on

# タイトルの設定
set-option -g set-titles on
set-option -g set-titles-string "tmux(#I/#P)::#W::#T"

# ウィンドウ名の自動更新
set-window-option -g automatic-rename off

# コピーモード時のキーバインディング
set-window-option -g mode-keys vi
set-option -g status-keys vi

# マウス
# set-window-option -g mode-mouse off
# set-option -g mouse-select-pane off
# xxx set-option -g mouse-utf8 on
set-option -g mouse off


# reload short cut
unbind r
bind-key r source ~/.tmux.conf \; display 'Config reloaded!'


# clock
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24


# What's the point of vi keys without pane movement?
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L

bind < resize-pane -L 10
bind > resize-pane -R 10
# bind - resize-pane -D 10
bind v resize-pane -D 10
# bind + resize-pane -U 10
bind ^ resize-pane -U 10
bind = resize-pane -Z

bind ` next-layout



# splitting and cycling
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# messages
set-window-option -g mode-style bg=magenta,fg=black


# No visual activity
set-option -g visual-activity off
set-option -g visual-bell on
set-option -g status-interval 120


bind C-n next
bind C-p prev
bind C-d detach
bind c new-window -n '_df_'
bind C-c new-window -n '_df_'
bind K confirm-before kill-pane
bind A command-prompt "rename-window '%%'"


unbind a
bind a last-window

bind M set-window-option monitor-activity
bind _ command-prompt "setw monitor-silence '%%'"


# Create an environment that zsh can make sense of
# set-environment -g tmuxTERM $TERM
set-environment -g INSCREEN yes
#yes set-environment TMUX_TITLE yes
#

# }}}




### Status Bar configuration {{{


# ::status bar: general {{{
set-option -g status on
set-option -g status-justify left
set-option -g status-interval 3
set-option -g status-left-length 40
set-option -g status-right-length 90
set-option -g message-style none

set-option -g visual-activity on
set-window-option -g monitor-activity off
# }}}


# ::status bar: format {{{
set-option -g status-left                                  '#[fg=colour253,bg=colour66,nobold]%Y-%m-%d %a %H:%M#[fg=colour66,bg=colour109,nobold]⮀#[fg=colour24,bg=colour109,nobold]#h::#I#[fg=colour109,bg=colour253,nobold]⮀'
set-option -g status-right                                 '#[fg=colour27,bg=colour253]⮃#[fg=colour234,bg=colour253]#S#[fg=colour246]-#[fg=colour234,bg=colour253]#I#[fg=colour246]-#[fg=colour234,bg=colour253]#P#[fg=colour27,bg=colour253]#(~/dot_files/.tmux.conf.d/status_line_styles/sls_01/status_generator status_right)'
# }}}


# }}}




### OS specific configuration {{{
# ## for OSX
# cf:
#     http://qiita.com/kiyodori/items/02eb88864f583db3e799
#     https://github.com/tmux/tmux/issues/543
# if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command ""'
if-shell 'test "$(uname)" = "Darwin"' 'set -g default-shell $SHELL; set-option -g default-command "tmux rename-window _df_; reattach-to-user-namespace -l $SHELL"'
# }}}




### node specific configuration ( as include ) {{{
if-shell 'test -r ~/.tmux.local.conf' "source-file ~/.tmux.local.conf"
# }}}

